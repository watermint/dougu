name: CI

on:
  push:
    branches: [current]
  pull_request:
    branches: [current]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          
      - name: Test
        run: cargo test --workspace --all-targets

      - name: Build
        id: build
        shell: bash
        run: |
          # Build the project and generate build output file for the pack step
          cargo build --workspace --all-targets --message-format=json > build_output.json
          
      # Pack artifact
      - name: Pack artifact
        id: pack_artifact
        shell: bash
        run: |
          # Create output directory
          mkdir -p target/dist
          
          # Let build pack command parse the cargo build output and create plain text files
          # with artifact information in the output directory
          ./target/debug/dougu --ui-skip-appinfo build pack \
            --output-dir target/dist \
            --cargo-output build_output.json \
            --ui-format jsonl
          
          # Read the artifact information from the plain text files
          ARCHIVE_PATH=$(cat target/dist/artifact_path)
          ARTIFACT_NAME=$(cat target/dist/artifact_name)
          
          echo "ARCHIVE_PATH: $ARCHIVE_PATH"
          echo "ARTIFACT_NAME: $ARTIFACT_NAME"
          
          echo "archive_path=$ARCHIVE_PATH" >> $GITHUB_OUTPUT
          echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
      
      # Upload artifact
      - name: Upload zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.pack_artifact.outputs.artifact_name }}
          path: ${{ steps.pack_artifact.outputs.archive_path }} 