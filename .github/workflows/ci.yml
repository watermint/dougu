name: CI

on:
  push:
    branches: [current]
  pull_request:
    branches: [current]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          
      - name: Test
        run: cargo test --workspace --all-targets

      - name: Build
        id: build
        shell: bash
        run: |
          # Build the project and capture the JSON output
          cargo build --workspace --all-targets --message-format=json > build_output.json
          
          echo "build_output.json:"
          echo "--------------------------------"
          cat build_output.json
          echo "--------------------------------"
          echo "end of build_output.json"
          
          # Use obj query command to extract the executable path based on main.rs
          EXECUTABLE=$(./target/debug/dougu obj query json build_output.json 'select(.reason == "compiler-artifact" and .target.src_path | endswith("/main.rs")) | .executable')
          
          if [ -z "$EXECUTABLE" ]; then
            echo "No executable found matching main.rs. Aborting." >&2
            exit 1
          fi
          
          echo "executable=$EXECUTABLE" >> $GITHUB_OUTPUT
          echo "app_name=dougu" >> $GITHUB_OUTPUT
      
      # Pack artifact
      - name: Pack artifact
        id: pack_artifact
        shell: bash
        run: |
          # Build the artifact using the build pack command
          mkdir -p target/dist
          PACK_OUTPUT=$(./target/debug/dougu build pack \
            --input-dir target/debug \
            --output-dir target/dist \
            --ui-skip-appinfo        \
            --ui-format jsonl)
          
          # Debug output
          echo "PACK_OUTPUT: $PACK_OUTPUT"
          
          # Extract information from JSON output
          ARCHIVE_PATH=$(echo "$PACK_OUTPUT" | ./target/debug/dougu obj query json - '.path')
          ARTIFACT_NAME=$(echo "$PACK_OUTPUT" | ./target/debug/dougu obj query json - '.name')
          
          # Debug output for extracted values
          echo "ARCHIVE_PATH: $ARCHIVE_PATH"
          echo "ARTIFACT_NAME: $ARTIFACT_NAME"
          
          # Save information for use in upload step
          echo "archive_path=$ARCHIVE_PATH" >> $GITHUB_OUTPUT
          echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
      
      # Upload artifact
      - name: Upload zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.pack_artifact.outputs.artifact_name }}
          path: ${{ steps.pack_artifact.outputs.archive_path }} 